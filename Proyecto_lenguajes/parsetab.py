
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALLT AMPERSAND CHAR_LITERAL COLUMNA DEGREE EQUALS FLOAT_LITERAL GREATER_THAN GREATER_THAN_OR_EQUAL IDENT INT_LITERAL LESS_THAN LESS_THAN_OR_EQUAL LPAREN MINUS PERCENT RPAREN SL TBL TILDE VAL WH\n    cons : SL cols TILDE tbl wh\n    \n    cols : col\n         | col MINUS col\n         | ALLT\n         | subcons\n    \n    subcons : LPAREN SL cols TILDE tbl wh RPAREN\n    \n    col : IDENT\n    \n    tbl : IDENT\n    \n    wh : WH cond\n    \n    cond : wh cond\n         | col op val\n         | cond AMPERSAND cond\n    \n    op : EQUALS\n       | LESS_THAN\n       | GREATER_THAN\n       | LESS_THAN_OR_EQUAL\n       | GREATER_THAN_OR_EQUAL\n    \n    val : CHAR_LITERAL\n        | INT_LITERAL\n        | FLOAT_LITERAL\n    '
    
_lr_action_items = {'SL':([0,8,],[2,11,]),'$end':([1,16,19,24,32,33,34,35,36,],[0,-1,-9,-10,-12,-11,-18,-19,-20,]),'ALLT':([2,11,],[5,5,]),'IDENT':([2,9,10,11,17,18,19,20,23,24,32,33,34,35,36,],[7,13,7,7,7,13,-9,7,7,-10,-12,-11,-18,-19,-20,]),'LPAREN':([2,11,],[8,8,]),'TILDE':([3,4,5,6,7,14,15,37,],[9,-2,-4,-5,-7,-3,18,-6,]),'MINUS':([4,7,],[10,-7,]),'EQUALS':([7,21,],[-7,26,]),'LESS_THAN':([7,21,],[-7,27,]),'GREATER_THAN':([7,21,],[-7,28,]),'LESS_THAN_OR_EQUAL':([7,21,],[-7,29,]),'GREATER_THAN_OR_EQUAL':([7,21,],[-7,30,]),'WH':([12,13,17,19,20,22,23,24,32,33,34,35,36,],[17,-8,17,-9,17,17,17,-10,-12,-11,-18,-19,-20,]),'RPAREN':([19,24,31,32,33,34,35,36,],[-9,-10,37,-12,-11,-18,-19,-20,]),'AMPERSAND':([19,24,32,33,34,35,36,],[23,23,23,-11,-18,-19,-20,]),'CHAR_LITERAL':([25,26,27,28,29,30,],[34,-13,-14,-15,-16,-17,]),'INT_LITERAL':([25,26,27,28,29,30,],[35,-13,-14,-15,-16,-17,]),'FLOAT_LITERAL':([25,26,27,28,29,30,],[36,-13,-14,-15,-16,-17,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cons':([0,],[1,]),'cols':([2,11,],[3,15,]),'col':([2,10,11,17,20,23,],[4,14,4,21,21,21,]),'subcons':([2,11,],[6,6,]),'tbl':([9,18,],[12,22,]),'wh':([12,17,20,22,23,],[16,20,20,31,20,]),'cond':([17,20,23,],[19,24,32,]),'op':([21,],[25,]),'val':([25,],[33,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cons","S'",1,None,None,None),
  ('cons -> SL cols TILDE tbl wh','cons',5,'p_cons','parsers.py',9),
  ('cols -> col','cols',1,'p_cols','parsers.py',18),
  ('cols -> col MINUS col','cols',3,'p_cols','parsers.py',19),
  ('cols -> ALLT','cols',1,'p_cols','parsers.py',20),
  ('cols -> subcons','cols',1,'p_cols','parsers.py',21),
  ('subcons -> LPAREN SL cols TILDE tbl wh RPAREN','subcons',7,'p_subcons','parsers.py',27),
  ('col -> IDENT','col',1,'p_col','parsers.py',33),
  ('tbl -> IDENT','tbl',1,'p_tbl','parsers.py',39),
  ('wh -> WH cond','wh',2,'p_wh','parsers.py',45),
  ('cond -> wh cond','cond',2,'p_cond','parsers.py',51),
  ('cond -> col op val','cond',3,'p_cond','parsers.py',52),
  ('cond -> cond AMPERSAND cond','cond',3,'p_cond','parsers.py',53),
  ('op -> EQUALS','op',1,'p_op','parsers.py',59),
  ('op -> LESS_THAN','op',1,'p_op','parsers.py',60),
  ('op -> GREATER_THAN','op',1,'p_op','parsers.py',61),
  ('op -> LESS_THAN_OR_EQUAL','op',1,'p_op','parsers.py',62),
  ('op -> GREATER_THAN_OR_EQUAL','op',1,'p_op','parsers.py',63),
  ('val -> CHAR_LITERAL','val',1,'p_val','parsers.py',69),
  ('val -> INT_LITERAL','val',1,'p_val','parsers.py',70),
  ('val -> FLOAT_LITERAL','val',1,'p_val','parsers.py',71),
]
